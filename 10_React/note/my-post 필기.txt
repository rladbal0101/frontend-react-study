#새 프로젝트 시작(my-post)
  ☆ CRUD
    C: Create(등록)
    R: Read(목록, 상세보기)
    U: Update(수정)
    D: Delete(삭제)



[PostDetail.jsx] 포스트 상세보기
어떤 것을 컴포넌트로 만들 것인가?
1. 반복적인 HTML이 발생할 때
2. 큰 페이지들(컴포넌트로 이루어짐)
3. 여기저기 자주 출현하는 것들(재사용을 위해)
but, 컴포넌트로 너무 쪼개는 것도 안좋음!

props로 데이터를 받아와서 처리할 때
매번 props.~~ 하기 불편하므로 배열의 구조분해 할당을 이용


* 배열이나 객체의 state 변경할 때 주의! (배열도 객체임)
  1. state 변경 함수의 특징
   : state가 신규 state랑 같은 경우, 변경 안함
  2. 배열/객체의 특징
   : 변수에 주소(참조)값이 저장됨
* 새로운 배열 또는 객체를 만들어 set함수에 넣어줘야 함
* 배열의 복사본 만들기(새로운 배열)

[App.js]

* 이벤트 버블링
  e.stopPropagation();
  좋아요 버튼 누를 때 글 상세보기까지 같이 클릭됨
  부모-자식 관계에 있을 때 이벤트 버블링이 일어남
  (하트를 onClick 했을 때 부모 div onClick이 같이 눌림 => 이벤트 버블링)
  e.stopPropagation(); // 상위 요소로 퍼지는 이벤트 버블링을 막음

* 포스트 추가/삭제
filter() 함수 사용법
  : filter 함수는 true/false 값을 반환하고, true일 경우에 새로운 배열에 포함됨
  예제에서는 삭제버튼 누른 포스트(false)만 걸러서 삭제하기 때문에 !==